package frc.robot;

import edu.wpi.first.wpilibj2.command.button.CommandJoystick;
import frc.robot.Commands.AlgaeRollers.SetAlgaeRollersState;
import frc.robot.Commands.complex.CancelAllCommands;
import frc.robot.Commands.CoralRollers.SetCoralRollersState;
import frc.robot.Commands.Elevator.SetElevatorState;
import frc.robot.Subsystems.AlgaeRollers.AlgaeRollersStates;
import frc.robot.Subsystems.CoralRollers.CoralRollersState;
import frc.robot.Subsystems.Elevator.ElevatorStates;

public class ButtonConfig {
    CommandJoystick driverLeft = ControlMap.DRIVER_LEFT;
    CommandJoystick driverRight = ControlMap.DRIVER_RIGHT;
    CommandJoystick driverButtons = ControlMap.DRIVER_BUTTONS;
    CommandJoystick coDriverLeft = ControlMap.CO_DRIVER_LEFT;
    CommandJoystick coDriverRight = ControlMap.CO_DRIVER_RIGHT;
    CommandJoystick coDriverButtons = ControlMap.CO_DRIVER_BUTTONS;

    public void initTeleop() {
        driverButtons.button(7).onTrue(new SetElevatorState(ElevatorStates.LEVEL4));
        //TO DO: drive button 7 needs to left alingn using the swerver sub system
        driverButtons.button(9).onTrue(new SetElevatorState(ElevatorStates.LEVEL3));
         //TO DO: drive button 9 needs to left alingn using the swerver sub system
        driverButtons.button(11).onTrue(new SetElevatorState(ElevatorStates.LEVEL2));
         //TO DO: drive button 11 needs to left alingn using the swerver sub system
        driverButtons.button(8).onTrue(new SetElevatorState(ElevatorStates.LEVEL4));
         //TO DO: drive button 8 needs to right alingn using the swerver sub system
       driverButtons.button(10).onTrue(new SetElevatorState(ElevatorStates.LEVEL3));
        //TO DO: drive button 10 needs to right alingn using the swerver sub system
       driverButtons.button(12).onTrue(new SetElevatorState(ElevatorStates.LEVEL2));
        //TO DO: drive button 12 needs to right alingn using the swerver sub system

        coDriverButtons.button(7).onTrue(new SetElevatorState(ElevatorStates.LEVEL4));
        //TO DO: drive button 7 needs to left alingn using the swerver sub system
        coDriverButtons.button(9).onTrue(new SetElevatorState(ElevatorStates.LEVEL3));
         //TO DO: drive button 9 needs to left alingn using the swerver sub system
         coDriverButtons.button(11).onTrue(new SetElevatorState(ElevatorStates.LEVEL2));
         //TO DO: drive button 11 needs to left alingn using the swerver sub system
         coDriverButtons.button(8).onTrue(new SetElevatorState(ElevatorStates.LEVEL4));
         //TO DO: drive button 8 needs to right alingn using the swerver sub system
         coDriverButtons.button(10).onTrue(new SetElevatorState(ElevatorStates.LEVEL3));
        //TO DO: drive button 10 needs to right alingn using the swerver sub system
        coDriverButtons.button(12).onTrue(new SetElevatorState(ElevatorStates.LEVEL2));
        //TO DO: drive button 12 needs to right alingn using the swerver sub system


        // While the top button of the left driver the reef alignment will run
       // driverLeft.button(1).whileTrue ();
    
        driverLeft.button(2).onTrue(new SetCoralRollersState(CoralRollersState.REJECTING));

        // driver button 1 is align to coral source 
        //driverButtons.button(16).negate().and(driverButtons.button(1)).onTrue();
        // driver button 2 is align to processer 
        //driverButtons.button(16).negate().and(driverButtons.button(2)).onTrue();
        //button 3 is avaible for any command
        //driverButtons.button(16).negate().and(driverButtons.button(3)).onTrue();
        // driver button 4 is PANIC (releases all game pieces)
        // driver button 5 is cancel all commands
        driverButtons.button(6).onTrue(new CancelAllCommands());
        coDriverButtons.button(6).onTrue(new CancelAllCommands());
        // driver button 6 is ZERO gyro

        driverRight.button(1).onTrue(new SetAlgaeRollersState(AlgaeRollersStates.INTAKE));
        driverRight.button(2).onTrue(new SetAlgaeRollersState(AlgaeRollersStates.OUTPUT));

        //when the Climb system switches on and button 1 we want to CLAMP THE CAGE
        //driverButtons.button(16).and(driverButtons.button(1)).onTrue();


        //when the Climb system switches on and button 2 we want to climb
        //driverButtons.button(16).and(driverButtons.button(2)).onTrue();

       
       // when the climb system switches on and button 3 we want to RESET
        //driverButtons.button(16).and(driverButtons.button(3)).onTrue();



    }
}
